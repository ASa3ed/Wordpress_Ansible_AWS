---
## Tasks for server
- name: Update apt cache
  apt: update_cache=yes cache_valid_time=3600

- name: Install Required Server Packages
  apt:
    name:
      - nginx
      # - mysql-server
      - default-mysql-server
      - python3-pymysql
      - php-mysql
      - php-fpm
    state: latest
    update_cache: yes  

- name: Install Required PHP Extensions
  apt:
    name:
      - php
      - php-gd
      - php-ssh2
      - php-cli
      - php-cgi
      - php-curl
      - php-mbstring
      - php-xml
      - php-xmlrpc
      - php-soap
      - php-intl
      - php-zip
    state: latest
    update_cache: yes

## Tasks for MySQL

- name: Create mysql database
  mysql_db: 
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: "{{ wp_mysql_db }}" 
    state: present

- name: Create mysql user
  mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: "{{ wp_mysql_user }}"
    password: "{{ wp_mysql_password }}"
    priv: '*.*:ALL'

## Tasks for Wordpress

- name: Download WordPress
  get_url:
    url=https://wordpress.org/latest.tar.gz
    dest=/tmp/wordpress.tar.gz
    validate_certs=no

- name: Extract WordPress
  unarchive: src=/tmp/wordpress.tar.gz dest=/var/www/ copy=no
  

- name: Rename sample config file
  command: mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php
    
- name: Update WordPress config file
  replace:
    path: /var/www/wordpress/wp-config.php
    regexp: "{{ item.regexp1 }}"
    replace: "{{ item.replace }}"
  with_items:
    - { regexp1: 'database_name_here', replace: '{{wp_mysql_db}}'}
    - { regexp1: 'username_here', replace: '{{wp_mysql_user}}'}
    - { regexp1: 'password_here', replace: '{{wp_mysql_password}}'}

- name: Copy Config file for Nginx site
  copy: 
    src: wordpress
    dest: /etc/nginx/sites-available/wordpress

- name: Removes "default" site
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
    
- name: Link Config file to Nginx sites-enabled 
  command: ln -s /etc/nginx/sites-available/wordpress /etc/nginx/sites-enabled/
  ignore_errors: yes
  notify:
  - restart Nginx
  - restart MySQL